#!/usr/bin/env -S nft -f

flush ruleset


define pp   = 1-65535
define tdns = 853
define tor  = 1080


define wan_if = {{ WAN_IF }}
define tor_v4 = {{ TOR_NETWORK_V4 }}
define tor_v6 = {{ TOR_NETWORK_V6 }}


table inet nat {
  chain prerouting {
    type nat hook prerouting priority -100

    tcp dport dns redirect comment "Hijack DNS"
    udp dport dns redirect comment "Hijack DNS"

    udp dport ntp redirect comment "Hijack NTP"

    tcp dport $pp ip  daddr $tor_v4 redirect to $tor comment "TOR trans-proxy"
    tcp dport $pp ip6 daddr $tor_v6 redirect to $tor comment "TOR trans-proxy"
  }

  chain postrouting {
    type nat hook postrouting priority 100
    oif $wan_if masquerade comment "NAT"
  }
}


table inet filter {
  chain input {
    type filter hook input priority 0
    policy drop

    ip protocol icmp   accept comment "Accept ICMP"
    ip6 nexthdr icmpv6 accept comment "Accept ICMP"

    ip protocol igmp accept comment "Accept multicasting"

    iif lo accept "Accept local"

    ct state established,related accept "Stateful Firewall"

    tcp dport ssh accept comment "Allow SSH"
    { tcp, udp } dport dns accept "Allow DNS"
    udp dport 33434-33524 accept comment "Allow trace route"
  }

  chain forward {
    type filter hook forward priority 0
    policy drop

    oif $wan_if accept
    iif $wan_if ct state established,related accept

    tcp dport $tdns drop comment "Drop DNS-TLS"

    ip protocol udp ip  daddr $tor_v4 drop comment "Drop udp to TOR"
    ip6 nexthdr udp ip6 daddr $tor_v6 drop comment "Drop udp to TOR"

    iif $wan_if drop "Drop WAN -> LAN"
  }

  chain output {
    type filter hook output priority 0
    policy accept

    ip  daddr $tor_v4 reject comment "Reject local -> TOR"
    ip6 daddr $tor_v6 reject comment "Reject local -> TOR"
  }
}

