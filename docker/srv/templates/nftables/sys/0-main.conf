#!/usr/bin/env -S nft -f

define wan_if = {{ WAN_IF }}
define trusted_if = {{ TRUSTED_BRIDGE }}

define internal_ifs = { {{ TRUSTED_BRIDGE }}, {{ GUEST_BRIDGE }} }

{% if NAT64_IF %}
define nat64_if = {{ NAT64_IF }}
{% endif %}

define trusted_v4 = {{ TRUSTED_NETWORK_V4.exploded }}
define trusted_v6 = {{ TRUSTED_NETWORK_V6.exploded }}

define wireguard_v4 = {{ WG_NETWORK_V4.exploded }}
define wireguard_v6 = {{ WG_NETWORK_V6.exploded }}

define guest_v4 = {{ GUEST_NETWORK_V4.exploded }}
define guest_v6 = {{ GUEST_NETWORK_V6.exploded }}

define tor_v4 = {{ TOR_NETWORK_V4.exploded }}
define tor_v6 = {{ TOR_NETWORK_V6.exploded }}


define trusted_networks_v4 = { $trusted_v4, $wireguard_v4 }
define trusted_networks_v6 = { $trusted_v6, $wireguard_v6 }
define internal_networks_v4 = { $trusted_v4, $wireguard_v4, $guest_v4 }
define internal_networks_v6 = { $trusted_v6, $wireguard_v6, $guest_v6 }


table inet router-nat {
  chain prerouting {
    type nat hook prerouting priority dstnat
    ct state invalid drop
  }

  chain postrouting {
    type nat hook postrouting priority srcnat
    ct state invalid drop

    oif $wan_if meta nfproto ipv4 masquerade comment "NATv4 on WAN"
    oif $wan_if ip6 saddr {{ IPV6_ULA }} masquerade comment "NATv6 on WAN"
  }
}


table inet router-filter {
  chain input {
    type filter hook input priority filter
    policy drop
    ct state invalid drop
    ct state established,related accept comment "Accept replies"

    ip  protocol icmp   accept comment "Accept ICMP4"
    ip6 nexthdr  icmpv6 accept comment "Accept ICMP6"

    iif lo accept comment "Accept local"
  }

  chain forward {
    type filter hook forward priority filter
    policy drop
    ct state invalid drop
    ct state established,related accept comment "Accept replies"

    ip  saddr $trusted_networks_v4 ip  daddr $internal_networks_v4 accept comment "Accept trusted/wg -> trusted/wg/guest"
    ip6 saddr $trusted_networks_v6 ip6 daddr $internal_networks_v6 accept comment "Accept trusted/wg -> trusted/wg/guest"

    ip  saddr $guest_v4 ip  daddr $internal_networks_v4 ip  protocol icmp   accept comment "Accept ICMP4 : guest -> trusted/wg/guest"
    ip6 saddr $guest_v6 ip6 daddr $internal_networks_v6 ip6 nexthdr  icmpv6 accept comment "Accept ICMP6 : guest -> trusted/wg/guest"

    iif trusted_if oif trusted_if accept comment "Accept trusted -> trusted"
    oif $wan_if accept comment "Accept * -> WAN -> internet"

    {% if NAT64_IF %}
    iif $nat64_if accept comment "Accept NAT64"
    oif $nat64_if accept comment "Accept NAT64"
    {% endif %}
  }

  chain output {
    type filter hook output priority filter
    ct state invalid drop
  }
}
